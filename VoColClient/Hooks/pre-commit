#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#


        files=$(git diff --cached --name-only --diff-filter=ACM | grep ".ttl$")
	if [ "$files" = "" ]; then 
	    exit 0 
	fi

	pass=true	

	echo "\nValidating Turtle:\n"

	for file in ${files}; do

            fileContent=`cat ${file}`
 
            fileHeader="${file}StringToSplit"
          
            fileContent="${fileHeader}${fileContent}"
          
            echo " ${fileContent} " > tempFileCurl.ttl

	    res=$(curl -X POST --data-binary @tempFileCurl.ttl http://ohsu-entities.vagrantshare.com/client)  

            if [ "$curlCode" = "6" ] || [ "$curlCode" = "7" ]; then 
                echo "\t\033[31mConnection refused or service not available\033[0m";
                message="See the above messages!"
                pass=false
            elif [ "$curlCode" = "0" ]; then 
              if echo $res | grep -q "Service Temporarily Unavailable"; then
                  echo "\t\033[31mConnection refused or service not available\033[0m";
                  message="See the above messages!"
                  pass=false
              elif echo $res | grep -q "Undefined error"; then
                  message="See the above messages!"
		  pass=false
              elif echo $res | grep -q "Error"; then
                  echo "\t\033[31mValidation Failed! ${file}\033[0m"
                  echo $res
                  message="Your commit contains files with syntactic errors. Please fix the errors and try again"
                  pass=false
              elif echo $res | grep -q "Syntax Validation"; then
	           echo "\t\033[32mValidation Passed! ${file}\033[0m"
              elif echo $res | grep -q "prefix"; then
                  echo "\t\033[32mValidation passed and the ${file} file reformatted!\033[0m"
                  echo "$res" > ${file}
              fi
            else
                echo "\t\033[31mUndefined error. Contact the administrator!\033[0m";
                message="See the above messages!"
                pass=false
            fi
   
            rm -f tempFileCurl.ttl

	done

        git update-index --again

	echo "\Validation complete\n"

	if ! $pass; then
	    echo "\033[41mCOMMIT FAILED:\033[0m Your commit contains files with syntactic errors. Please fix the errors and try again.\n"
	    echo ${file}
	    exit 1
	else
	    echo "\033[42mCOMMIT SUCCEEDED\033[0m\n"
	fi

